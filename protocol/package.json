{
	"name": "vscode-languageserver-protocol",
	"description": "VSCode Language Server Protocol implementation",
	"exports": {
		".": {
			"default": "./lib/common/api.js",
			"types": "./lib/common/api.d.ts"
		},
		"./browser": {
			"browser": "./lib/browser/main.js",
			"types": "./lib/browser/main.d.ts"
		},
		"./node": {
			"node": "./lib/node/main.js",
			"types": "./lib/node/main.d.ts"
		}
	},
	"scripts": {
		"all": "npm run clean && npm run compile && npm run lint && npm run test && npm run compile:metaModelTool && npm run generate:metaModel && npm run generate:metaModelSchema",
		"all:publish": "git clean -xfd . && npm install && npm run compile:publish && npm run lint && npm run test && npm run compile:metaModelTool && npm run generate:metaModel && npm run generate:metaModelSchema",
		"clean": "rimraf lib && rimraf dist",
		"compile": "tsc -b ./tsconfig.json",
		"compile:metaModelTool": "cd ../tools && npm run compile && cd ../protocol",
		"compile:publish": "tsc -b ./tsconfig.publish.json",
		"generate:metaModel": "node ../tools/lib/generator-main.js -p ./src/common/tsconfig.json > ./metaModel.json",
		"generate:metaModelSchema": "ts-json-schema-generator --tsconfig ../tools/tsconfig.json --path ../tools/src/metaModel.ts > ./metaModel.schema.json",
		"prepack": "npm run all:publish",
		"prepublishOnly": "echo \"⛔ Can only publish from a secure pipeline ⛔\" && node ../build/npm/fail",
		"postpublish": "node ../build/npm/post-publish.js",
		"test:browser": "npm run webpack:test:silent && node ../build/bin/runBrowserTests.js  http://127.0.0.1:8080/protocol/src/browser/test/",
		"test:node": "node ../node_modules/mocha/bin/_mocha",
		"preversion": "npm test",
		"webpack:test": "cd ../types && npm run compile:esm && cd ../protocol && node ../build/bin/webpack --mode none --config ./src/browser/test/webpack.config.js",
		"webpack:test:silent": "cd ../types && npm run compile:esm && cd ../protocol && node ../build/bin/webpack --no-stats --mode none --config ./src/browser/test/webpack.config.js"
	},
	"dependencies": {}
}
